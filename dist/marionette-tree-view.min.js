Marionette.NodeView=Marionette.CompositeView.extend({childViewContainer:".children",className:"node",ui:{toggle:"a[data-toggle=node]",iconCollapse:".icon-collapse",iconExpand:".icon-expand",iconLoading:".icon-loading",iconError:".icon-error",children:".children"},events:{"click a.collapsed[data-toggle=node] i":"onExpand","click a.expanded[data-toggle=node] i":"onCollapse","click a[data-toggle=node]":"onSelect"},modelEvents:{"change:children":"onChildrenFetched","delete:children":"onCollapse"},initialize:function(a){a=a||{},this.collectionType=a.collectionType,this.collection=this.model.get("children")||new this.collectionType},childViewOptions:function(){return{collectionType:this.collectionType}},onRenderCollection:function(){this.ui.children.removeClass("hide"),this.children.each(function(a){this.bindChildView(a)},this)},bindChildView:function(a){this.listenTo(a,"select",this.onChildSelected),this.listenTo(a,"expand",this.onChildExpand),this.listenTo(a,"collapse",this.onChildCollapse)},onChildSelected:function(a){this.trigger("select",a)},onChildExpand:function(a){this.trigger("expand",a)},onChildCollapse:function(a){this.trigger("collapse",a)},onSelect:function(a){this.select(),a.stopPropagation()},select:function(){this.trigger("select",this.model),this.$el.addClass("active")},onExpand:function(a){return this.$el.hasClass("node-empty")?!1:(this.isExpanding=!0,this.setIconsOnExpand(),this.fetchChildren({error:_.bind(this.onError,this)}),a.stopPropagation(),void this.trigger("expand",this.model))},setIconsOnExpand:function(){this.ui.iconError.addClass("hide"),this.ui.toggle.removeClass("collapsed").addClass("expanded"),this.ui.iconExpand.addClass("hide"),this.ui.iconLoading.removeClass("hide")},onChildrenFetched:function(){this.setIconsOnExpand(),this.collection.reset(this.model.get("children").models),this.collection.size()?this.ui.iconCollapse.removeClass("hide"):this.$el.addClass("node-empty"),this.ui.iconLoading.addClass("hide"),this.isExpanding=!1},fetchChildren:function(a){return this.model.fetchChildren(a)},onError:function(){this.ui.iconExpand.removeClass("hide"),this.ui.iconError.removeClass("hide"),this.ui.iconLoading.addClass("hide"),this.ui.toggle.addClass("collapsed").removeClass("expanded"),this.isExpanding=!1},onCollapse:function(a){return this.$el.hasClass("node-empty")||this.isExpanding?!1:(this.ui.toggle.addClass("collapsed").removeClass("expanded"),this.ui.iconCollapse.addClass("hide"),this.ui.iconExpand.removeClass("hide"),this.ui.children.addClass("hide"),this.children.each(function(a){a.onCollapse()}),a&&a.stopPropagation(),void this.trigger("collapse",this.model))}}),Marionette.TreeView=Marionette.CollectionView.extend({className:"tree-view",initialize:function(a){a=a||{},this.collectionType=a.collectionType},childViewOptions:function(){return{collectionType:this.collectionType}},onRenderCollection:function(){this.children.each(function(a){this.bindChildView(a)},this)},onShow:function(){this.children.first().select()},bindChildView:function(a){this.listenTo(a,"select",this.onChildSelected),this.listenTo(a,"expand",this.onChildExpanded),this.listenTo(a,"collapse",this.onChildCollapsed)},onChildSelected:function(a){this.$(".node").removeClass("active"),this.trigger("select",a)},onChildExpanded:function(a){this.trigger("expand",a)},onChildCollapsed:function(a){this.trigger("collapse",a)}});